/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
/* stylelint-disable */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}html,.stylelint{line-height:1}body{line-height:inherit}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}
/* stylelint-enable */
/* Begin site styles below */

#content {
  display: flex;
  flex-flow: column wrap;
}

#goals,
#aboutme {
  flex: 1 0 auto;
  height: 100vw;
}

html {
  font-size: 1.125em; /* 18/16px= 1.125 em */
  line-height: 1.33333333em;   /* 24/18= 1.33333333 */
  font-family: Georgia, "Times New Roman", Times, Roman, serif;
  padding: 0.66666667em; /* 16/24= 0.66666667em*/
  /*background-image: url("assets/img/cs_background.jpg");*/
  background-color: #9DBEB3;
  color: #11110F;
}

h1 {
  font-size: 2em; /*32/16px = 2em */
  line-height: 1em; /*16/16px = 1em */
  padding: 0.333333em; /*16/48px = 0.333333em */
  text-align: left;
}

h2 {
  font-size: 1.25em; /*20/16px = 1.25em */
  line-height: 1em; /*16/16px = 1 */
  text-align: left;
}

h3 {
  font-size: 1.1875em; /*19/16px = 1.1875em*/
  line-height: 1em; /*16/16px = 1 */
  text-align: left;
}

body {
  padding: 0.75em; /*12/16 px = 0.75em */
  margin: 0;
}

h1,
h2,
p,
ul,
nav {
  padding-bottom: 1.33333333em;   /* 24/18= 1.33333333 */
}

nav a {
  padding-bottom: 0;
  display: block;
  color: #E8E8EA;
  text-align: left;
  padding: 0.77777778em 0.8888888889em;    /*14/18= 0.7777778em 16/18px - 0.8888888889em*/
  text-decoration: none;
  background-color: #4C8A7D;
  border-style: solid;
  border-width: 1px;
  border-color: white;
}

nav a:hover, nav a:active{
  background-color: silver;
  color: white;
}

nav a:focus, #resumehome, #projectshome, #indexhome{
  background-color: black;
}

#dropdownmenu ul{
  position: absolute;
  top: 25px;
  left: -1px;
  width: 200px;
  padding: 0;
  display: none;
}

#projectandapps li,
#websites li,
#education li,
#coursework li,
#skills li,
#experience li {
  list-style-type: square;
  margin-left: 1.33333333em;   /* 24/18= 1.33333333 */
}

.ridesharegallery {
  display: flex;
}

img {
  display: block;
  max-width: 100%;
}

figure {
  flex: 33.33%;
  position: relative;
  padding-left: 1em; /*16/16px = 1em*/
  padding-bottom: 2em; /*32/16px = 2em*/
}

figcaption {
  position: absolute;
  bottom: 0;
  padding: 1em; /*16/16px = 1em */
  background: #4C8A7D;
  color: #E8E8EA;
}

/*MEDIA QUERIES */
/*600/16px = 37.5em*/
@media screen and (min-width: 37.5em) {
  #content {
    flex-flow: row wrap;
  }
  #goals,
  #aboutme {
    width: 50%;
    height: 50vw;
  }
}
/*800/16px = 50em */
@media screen and (min-width: 50em) {
  #goals,
  #aboutme {
    width: 33%;
    height: 33vw;
  }
}
/*
  A quick baseline grid overlay using css+svg.
  Inspired by [Basehold.it](https://basehold.it/). @author leshido
  1. Paste this at the *very* bottom of your CSS file.
  2. Change the `height` value on `<svg height="" ...>` to the value
     of your `line-height` (in pixels).
  3. Add `class="g"` to your `<html>` tag to display the grid.
 */

.g body { position: relative; }

.g body::after {
  background: url('data:image/svg+xml;utf8,<svg height="20" width="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="0.5" style="fill:rgba(255, 0, 0, 0.3)" /></svg>') repeat top left;
  content: "";
  display: block;
  pointer-events: none;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9999;
  position: absolute;
}

.g body:active::after { display: none; }
